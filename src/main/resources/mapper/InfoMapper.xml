<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oxygen.studentinfo.dao.InfoMapper" >
  <resultMap id="BaseResultMap" type="com.oxygen.studentinfo.entity.Info" >
    <id column="sid" property="sid" jdbcType="VARBINARY" />
    <result column="sname" property="sname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="major_name" property="majorName" jdbcType="VARCHAR" />
    <result column="college_name" property="collegeName" jdbcType="VARCHAR" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    sid, sname, sex, class_id, college_id, major_id, category_id, address, idcard, grade, 
    photo, phone, remark
  </sql>

  <sql id="All_Info_List" >
    info.*, college.college_name, major.major_name, category.category_name, classroom.class_name
  </sql>


  <select id="queryAllInfo" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    limit #{currIndex} , #{pageSize}
  </select>

  <select id="queryInfoByCategoryId" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    where info.category_id = #{categoryId}
    limit #{currIndex} , #{pageSize}
  </select>

  <select id="querySpecialInfo" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    where category.category_name != '普通'
    limit #{currIndex} , #{pageSize}

  </select>

  <select id="queryInfoByKeyword" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    where info.sid like #{keyword}
    or info.sname like #{keyword}
    or info.sex like #{keyword}
    or classroom.class_name like #{keyword}
    or college.college_name like #{keyword}
    or major.major_name like #{keyword}
    or category.category_name like #{keyword}
    or info.address like #{keyword}
    or info.idcard like #{keyword}
    or info.grade like #{keyword}
    or info.photo like #{keyword}
    or info.phone like #{keyword}
    or info.remark like #{keyword}
    limit #{currIndex} , #{pageSize}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from info
    where sid = #{sid,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
  </select>

  <select id="selectByCategoryId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    where info.category_id = #{categoryId,jdbcType=INTEGER}
  </select>


  <select id="selectSpecial" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    where category.category_name != '普通'
  </select>

  <select id="selectByGrade" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    where info.grade = #{grade}
  </select>

  <select id="queryByGrade" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    where info.grade = #{grade}
    limit #{currIndex} , #{pageSize}
  </select>

  <select id="selectGrade" resultMap="BaseResultMap">
    select distinct grade from classroom order by grade
  </select>

  <select id="selectByKeyword" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="All_Info_List" />
    from info
    left join classroom on info.class_id = classroom.class_id
    left join major on info.major_id = major.major_id
    left join college on info.college_id = college.college_id
    left join category on info.category_id = category.category_id
    where info.sid like #{keyword}
    or info.sname like #{keyword}
    or info.sex like #{keyword}
    or classroom.class_name like #{keyword}
    or college.college_name like #{keyword}
    or major.major_name like #{keyword}
    or category.category_name like #{keyword}
    or info.address like #{keyword}
    or info.idcard like #{keyword}
    or info.grade like #{keyword}
    or info.photo like #{keyword}
    or info.phone like #{keyword}
    or info.remark like #{keyword}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from info
    where sid = #{sid,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.oxygen.studentinfo.entity.Info" >
    insert into info (sid, sname, sex, 
      class_id, college_id, major_id, 
      category_id, address, idcard, 
      grade, photo, phone, 
      remark)
    values (#{sid,jdbcType=VARBINARY}, #{sname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{classId,jdbcType=INTEGER}, #{collegeId,jdbcType=INTEGER}, #{majorId,jdbcType=INTEGER}, 
      #{categoryId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{grade,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.oxygen.studentinfo.entity.Info" >
    insert into info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        sid,
      </if>
      <if test="sname != null" >
        sname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=VARBINARY},
      </if>
      <if test="sname != null" >
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.oxygen.studentinfo.entity.Info" >
    update info
    <set >
      <if test="sname != null" >
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where sid = #{sid,jdbcType=VARBINARY}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.oxygen.studentinfo.entity.Info" >
    update info
    set sname = #{sname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER},
      college_id = #{collegeId,jdbcType=INTEGER},
      major_id = #{majorId,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where sid = #{sid,jdbcType=VARBINARY}
  </update>

</mapper>