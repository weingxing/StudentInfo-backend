<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oxygen.studentinfo.dao.StudentMapper" >

  <resultMap id="BaseResultMap" type="com.oxygen.studentinfo.entity.Student" >
    <id column="sno" property="sno" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="desc_category" property="descCategory" jdbcType="VARCHAR" />
    <result column="clazz" property="clazz" jdbcType="INTEGER" />
    <result column="department" property="department" jdbcType="INTEGER" />
    <result column="major" property="major" jdbcType="INTEGER" />
    <result column="college" property="college" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="InfoResultMap" type="com.oxygen.studentinfo.dto.StudentInfo" >
    <id column="sno" property="sno" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="caname" property="category" jdbcType="VARCHAR" />
    <result column="desc_category" property="descCategory" jdbcType="VARCHAR" />
    <result column="clname" property="clazz" jdbcType="VARCHAR" />
    <result column="dname" property="department" jdbcType="VARCHAR" />
    <result column="mname" property="major" jdbcType="VARCHAR" />
    <result column="coname" property="college" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    sno, name, sex, category, desc_category, clazz, department, major, college, phone,
    idcard, address, remark, photo
  </sql>

  <sql id="Info_Column_List" >
    sno, student.name, sex, category.name as caname, desc_category, clazz.name as clname,
    department.name as dname, major.name as mname, college.name as coname, phone, idcard,
     address, remark, clazz.grade as grade, photo
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
  select
  <include refid="Base_Column_List" />
  from student
  where sno = #{sno,jdbcType=VARCHAR}
</select>

  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student
  </select>

  <select id="selectAllByPage" resultMap="InfoResultMap" parameterType="java.util.Map" >
    select
    <include refid="Info_Column_List" />
    from student
    left join clazz on student.clazz = clazz.id
    left join category on student.category = category.id
    left join college on student.college = college.id
    left join department on student.department = department.id
    left join major on student.major = major.id
    limit #{currIndex}, #{pageSize}
  </select>

  <select id="search" resultMap="InfoResultMap" parameterType="java.lang.String" >
    select
    <include refid="Info_Column_List" />
    from student
    left join clazz on student.clazz = clazz.id
    left join category on student.category = category.id
    left join college on student.college = college.id
    left join department on student.department = department.id
    left join major on student.major = major.id
    where sno like #{keyword} or student.name like #{keyword} or sex like #{keyword} or
       category.name like #{keyword} or desc_category like #{keyword} or
       clazz.name like #{keyword} or department.name like #{keyword} or
       clazz.grade like #{keyword} or major.name like #{keyword} or college.name like #{keyword} or
       phone like #{keyword} or idcard like #{keyword} or
       address like #{keyword} or remark  like #{keyword}
  </select>

  <select id="selectAllByGrade" resultMap="InfoResultMap" parameterType="java.lang.String" >
  select
  <include refid="Info_Column_List" />
  from student
  left join clazz on student.clazz = clazz.id
  left join category on student.category = category.id
  left join college on student.college = college.id
  left join department on student.department = department.id
  left join major on student.major = major.id
  where clazz.grade=#{grade}
</select>

  <select id="selectAllByClazz" resultMap="InfoResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Info_Column_List" />
    from student
    left join clazz on student.clazz = clazz.id
    left join category on student.category = category.id
    left join college on student.college = college.id
    left join department on student.department = department.id
    left join major on student.major = major.id
    where student.clazz=#{clazz}
  </select>

  <select id="searchByPage" resultMap="InfoResultMap" parameterType="java.util.Map" >
    select
    <include refid="Info_Column_List" />
    from student
    left join clazz on student.clazz = clazz.id
    left join category on student.category = category.id
    left join college on student.college = college.id
    left join department on student.department = department.id
    left join major on student.major = major.id
    where sno like #{keyword} or student.name like #{keyword} or sex like #{keyword} or
    category.name like #{keyword} or desc_category like #{keyword} or
    clazz.name like #{keyword} or department.name like #{keyword} or
    clazz.grade like #{keyword} or major.name like #{keyword} or college.name like #{keyword} or
    phone like #{keyword} or idcard like #{keyword} or
    address like #{keyword} or remark  like #{keyword}
    limit #{currIndex}, #{pageSize}
  </select>

  <select id="selectByGrade" resultMap="InfoResultMap" parameterType="java.util.Map" >
    select
    <include refid="Info_Column_List" />
    from student
    left join clazz on student.clazz = clazz.id
    left join category on student.category = category.id
    left join college on student.college = college.id
    left join department on student.department = department.id
    left join major on student.major = major.id
    where clazz.grade=#{grade}
    limit #{currIndex}, #{pageSize}
  </select>

  <select id="selectByClazz" resultMap="InfoResultMap" parameterType="java.util.Map" >
    select
    <include refid="Info_Column_List" />
    from student
    left join clazz on student.clazz = clazz.id
    left join category on student.category = category.id
    left join college on student.college = college.id
    left join department on student.department = department.id
    left join major on student.major = major.id
    where student.clazz=#{clazz}
    limit #{currIndex}, #{pageSize}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student
    where sno = #{sno,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.oxygen.studentinfo.entity.Student" >
    insert into student (sno, name, sex, 
      category, desc_category, clazz, 
      department, major, college, 
      phone, idcard, address, 
      remark, photo)
    values (#{sno,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{category,jdbcType=INTEGER}, #{descCategory,jdbcType=VARCHAR}, #{clazz,jdbcType=INTEGER}, 
      #{department,jdbcType=INTEGER}, #{major,jdbcType=INTEGER}, #{college,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.oxygen.studentinfo.entity.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sno != null" >
        sno,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="descCategory != null" >
        desc_category,
      </if>
      <if test="clazz != null" >
        clazz,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sno != null" >
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="descCategory != null" >
        #{descCategory,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null" >
        #{clazz,jdbcType=INTEGER},
      </if>
      <if test="department != null" >
        #{department,jdbcType=INTEGER},
      </if>
      <if test="major != null" >
        #{major,jdbcType=INTEGER},
      </if>
      <if test="college != null" >
        #{college,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.oxygen.studentinfo.entity.Student" >
    update student
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="descCategory != null" >
        desc_category = #{descCategory,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null" >
        clazz = #{clazz,jdbcType=INTEGER},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=INTEGER},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=INTEGER},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where sno = #{sno,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.oxygen.studentinfo.entity.Student" >
    update student
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      desc_category = #{descCategory,jdbcType=VARCHAR},
      clazz = #{clazz,jdbcType=INTEGER},
      department = #{department,jdbcType=INTEGER},
      major = #{major,jdbcType=INTEGER},
      college = #{college,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where sno = #{sno,jdbcType=VARCHAR}
  </update>

</mapper>